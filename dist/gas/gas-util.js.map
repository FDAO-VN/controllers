{"version":3,"file":"gas-util.js","sourceRoot":"","sources":["../../src/gas/gas-util.ts"],"names":[],"mappings":"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","sourcesContent":["import { BN } from 'ethereumjs-util';\nimport { query } from '../util';\nimport {\n  GasFeeEstimates,\n  LegacyGasPriceEstimate,\n  EstimatedGasFeeTimeBounds,\n  unknownString,\n} from './GasFeeController';\n\n// import { handleFetch } from '../util';\n\n// const GAS_FEE_API = 'https://gas-fee-api-goes-here';\n\nconst mockEIP1559ApiResponses = [\n  {\n    low: {\n      minWaitTimeEstimate: 120000,\n      maxWaitTimeEstimate: 300000,\n      suggestedMaxPriorityFeePerGas: '1',\n      suggestedMaxFeePerGas: '35',\n    },\n    medium: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 30000,\n      suggestedMaxPriorityFeePerGas: '2',\n      suggestedMaxFeePerGas: '40',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '3',\n      suggestedMaxFeePerGas: '60',\n    },\n    estimatedBaseFee: '30',\n  },\n  {\n    low: {\n      minWaitTimeEstimate: 180000,\n      maxWaitTimeEstimate: 360000,\n      suggestedMaxPriorityFeePerGas: '1',\n      suggestedMaxFeePerGas: '40',\n    },\n    medium: {\n      minWaitTimeEstimate: 15000,\n      maxWaitTimeEstimate: 60000,\n      suggestedMaxPriorityFeePerGas: '2',\n      suggestedMaxFeePerGas: '45',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '3',\n      suggestedMaxFeePerGas: '65',\n    },\n    estimatedBaseFee: '32',\n  },\n  {\n    low: {\n      minWaitTimeEstimate: 60000,\n      maxWaitTimeEstimate: 240000,\n      suggestedMaxPriorityFeePerGas: '1',\n      suggestedMaxFeePerGas: '42',\n    },\n    medium: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 30000,\n      suggestedMaxPriorityFeePerGas: '3',\n      suggestedMaxFeePerGas: '47',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '4',\n      suggestedMaxFeePerGas: '67',\n    },\n    estimatedBaseFee: '35',\n  },\n  {\n    low: {\n      minWaitTimeEstimate: 180000,\n      maxWaitTimeEstimate: 300000,\n      suggestedMaxPriorityFeePerGas: '3',\n      suggestedMaxFeePerGas: '53',\n    },\n    medium: {\n      minWaitTimeEstimate: 15000,\n      maxWaitTimeEstimate: 60000,\n      suggestedMaxPriorityFeePerGas: '7',\n      suggestedMaxFeePerGas: '70',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '10',\n      suggestedMaxFeePerGas: '100',\n    },\n    estimatedBaseFee: '50',\n  },\n  {\n    low: {\n      minWaitTimeEstimate: 120000,\n      maxWaitTimeEstimate: 360000,\n      suggestedMaxPriorityFeePerGas: '1',\n      suggestedMaxFeePerGas: '35',\n    },\n    medium: {\n      minWaitTimeEstimate: 15000,\n      maxWaitTimeEstimate: 60000,\n      suggestedMaxPriorityFeePerGas: '3',\n      suggestedMaxFeePerGas: '40',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '4',\n      suggestedMaxFeePerGas: '60',\n    },\n    estimatedBaseFee: '30',\n  },\n  {\n    low: {\n      minWaitTimeEstimate: 60000,\n      maxWaitTimeEstimate: 600000,\n      suggestedMaxPriorityFeePerGas: '1',\n      suggestedMaxFeePerGas: '35',\n    },\n    medium: {\n      minWaitTimeEstimate: 15000,\n      maxWaitTimeEstimate: 60000,\n      suggestedMaxPriorityFeePerGas: '1.8',\n      suggestedMaxFeePerGas: '38',\n    },\n    high: {\n      minWaitTimeEstimate: 0,\n      maxWaitTimeEstimate: 150000,\n      suggestedMaxPriorityFeePerGas: '2',\n      suggestedMaxFeePerGas: '50',\n    },\n    estimatedBaseFee: '28',\n  },\n];\n\nconst getMockApiResponse = (): GasFeeEstimates => {\n  return mockEIP1559ApiResponses[Math.floor(Math.random() * 6)];\n};\n\nexport function fetchGasEstimates(): Promise<GasFeeEstimates> {\n  // return handleFetch(GAS_FEE_API)\n  return new Promise((resolve) => {\n    resolve(getMockApiResponse());\n  });\n}\n\nexport async function fetchLegacyGasPriceEstimate(\n  ethQuery: any,\n): Promise<LegacyGasPriceEstimate> {\n  const gasPrice = await query(ethQuery, 'gasPrice');\n  return {\n    gasPrice,\n  };\n}\n\nfunction gweiHexToWEIBN(n: any) {\n  const BN_1000 = new BN(1000, 10);\n  return new BN(n, 16).mul(BN_1000);\n}\n\nexport function calculateTimeEstimate(\n  maxPriorityFeePerGas: string,\n  maxFeePerGas: string,\n  gasFeeEstimates: GasFeeEstimates,\n): EstimatedGasFeeTimeBounds {\n  const { low, medium, high, estimatedBaseFee } = gasFeeEstimates;\n\n  const maxPriorityFeePerGasInWEI = gweiHexToWEIBN(maxPriorityFeePerGas);\n  const maxFeePerGasInWEI = gweiHexToWEIBN(maxFeePerGas);\n  const estimatedBaseFeeInWEI = gweiHexToWEIBN(estimatedBaseFee);\n\n  const effectiveMaxPriorityFee = BN.min(\n    maxPriorityFeePerGasInWEI,\n    maxFeePerGasInWEI.sub(estimatedBaseFeeInWEI),\n  );\n\n  const lowMaxPriorityFeeInWEI = gweiHexToWEIBN(\n    low.suggestedMaxPriorityFeePerGas,\n  );\n  const mediumMaxPriorityFeeInWEI = gweiHexToWEIBN(\n    medium.suggestedMaxPriorityFeePerGas,\n  );\n  const highMaxPriorityFeeInWEI = gweiHexToWEIBN(\n    high.suggestedMaxPriorityFeePerGas,\n  );\n\n  let lowerTimeBound;\n  let upperTimeBound;\n\n  if (effectiveMaxPriorityFee.lt(lowMaxPriorityFeeInWEI)) {\n    lowerTimeBound = null;\n    upperTimeBound = 'unknown' as unknownString;\n  } else if (\n    effectiveMaxPriorityFee.gte(lowMaxPriorityFeeInWEI) &&\n    effectiveMaxPriorityFee.lt(mediumMaxPriorityFeeInWEI)\n  ) {\n    lowerTimeBound = low.minWaitTimeEstimate;\n    upperTimeBound = low.maxWaitTimeEstimate;\n  } else if (\n    effectiveMaxPriorityFee.gte(mediumMaxPriorityFeeInWEI) &&\n    effectiveMaxPriorityFee.lt(highMaxPriorityFeeInWEI)\n  ) {\n    lowerTimeBound = medium.minWaitTimeEstimate;\n    upperTimeBound = medium.maxWaitTimeEstimate;\n  } else if (effectiveMaxPriorityFee.eq(highMaxPriorityFeeInWEI)) {\n    lowerTimeBound = high.minWaitTimeEstimate;\n    upperTimeBound = high.maxWaitTimeEstimate;\n  } else {\n    lowerTimeBound = 0;\n    upperTimeBound = high.maxWaitTimeEstimate;\n  }\n\n  return {\n    lowerTimeBound,\n    upperTimeBound,\n  };\n}\n"]}